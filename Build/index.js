import r from"node-fetch";export default class{async Login(e){let t={};try{const a=await r("https://www.codingame.com/services/Codingamer/loginSiteV2",{method:"POST",body:JSON.stringify([e.Email,e.Password,!0])});t=await a.json(),this.cookies=a.headers.raw()["set-cookie"].map((r=>r.split(";")[0])).join(";")}catch(r){return console.warn("There was an error when logging in Error:",r),r}if(t.userId||console.warn("No userId was found in the login result:",t),this.userId=t.userId,e.LoadUser){const r=await this.GetUserByHandle(t.codinGamer.publicHandle);if(!r.valid)return{valid:!1,error:new Error("Unknown Error!")};this.user=r.result}}async GetUserById(e){try{const t=await r("https://www.codingame.com/services/CodinGamer/findCodingamerFollowCard",{method:"POST",body:JSON.stringify([e,this.userId]),headers:{cookie:this.cookies}}),a=await t.json();return a&&a.publicHandle?await this.GetUserByHandle(a.publicHandle):{valid:!1,error:new Error("Not found")}}catch(r){return{valid:!1,error:r}}}async CreateClash(e){if(!this.UserId)return{valid:!1,error:new Error("You must be logged in to create clashes")};try{const t=await r("https://www.codingame.com/services/ClashOfCode/createPrivateClash",{method:"POST",body:JSON.stringify([this.UserId,{SHORT:!0},[],e||["FASTEST","SHORTEST","REVERSE"]]),headers:{cookie:this.cookies}});return{result:await t.json(),valid:!0}}catch(r){return{valid:!1,error:r}}}async GetClash(e){try{const t=await r("https://www.codingame.com/services/ClashOfCode/findClashByHandle",{method:"POST",body:JSON.stringify([e])});return{result:await t.json(),valid:!0}}catch(r){return{valid:!1,error:r}}}async GetNotifications(){if(!this.userId)return{valid:!1,error:new Error("You must be logged in to check notifications")};try{const e=await r("https://www.codingame.com/services/Notification/findUnreadNotifications",{method:"POST",body:[this.userId]});return{result:await e.json(),valid:!0}}catch(r){return{valid:!1,error:r}}}async Search(e){try{const t=await r("https://www.codingame.com/services/search/search",{method:"POST",body:JSON.stringify([e,"en",null])});return{result:await t.json(),valid:!0}}catch(r){return{valid:!1,error:r}}}async GetUserByHandle(e){try{const t=await(await r("https://www.codingame.com/services/CodinGamer/findCodingamePointsStatsByHandle",{method:"POST",body:JSON.stringify([e])})).json();return t.codingamer?{result:t.codingamer,valid:!0}:{valid:!1,error:new Error("User not found")}}catch(r){return{valid:!1,error:r}}}async GetUserByName(r){const e=await this.Search(r);if(null!=e)for(const t of e)return"USER"===t.type&&t.name===r?{result:await this.GetUserByHandle(t.id),valid:!0}:{valid:!1,error:new Error("User not found")}}async GetPendingClashes(){try{const e=await r("https://www.codingame.com/services/ClashOfCode/findPendingClashes",{method:"POST",body:JSON.stringify([])});return{result:await e.json(),valid:!0}}catch(r){return{valid:!1,error:r}}}constructor(r){r&&r.Email&&r.Password&&this.Login({Email:r.Email,Password:r.Password,LoadUser:r.LoadUser})}}
