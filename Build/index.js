import e from"node-fetch";export default class{async Login(n){let o={};try{const t=await e("https://www.codingame.com/services/Codingamer/loginSiteV2",{method:"POST",body:JSON.stringify([n.Email,n.Password,!0])});o=await t.json(),this.Cookies=t.headers.raw()["set-cookie"].map((e=>e.split(";")[0])).join(";")}catch(e){return console.warn("There was an error when logging in Error:",e),e}o.userId||console.warn("No userId was found in the login result:",o);const t={pseudo:o.codinGamer.pseudo,userId:o.codinGamer.userId,email:o.codinGamer.email,countryId:o.codingamer.countryId,publicHandle:o.codingamer.publicHandle,formValues:o.codingamer.formValues,enable:o.codingamer.enable,rank:o.codingamer.rank,tagline:o.codingamer.tagline,company:o.codingamer.company,level:o.codingamer.level,xp:o.codingamer.xp,category:o.codingamer.category};return this.User=t,this.UserId=t,t}async FindCodinGamer(n){try{const o=await e("https://www.codingame.com/services/CodinGamer/findCodingamerFollowCard",{method:"POST",body:JSON.stringify([n,this.UserId])});return await o.json()}catch(e){console.warn("Something went wrong when getting info on Codingamer",n,"Error:",e)}}async CreateClash(n){if(this.UserId)try{const o=await e("https://www.codingame.com/services/ClashOfCode/createPrivateClash",{method:"POST",body:JSON.stringify([this.UserId,{SHORT:!0},[],n||["FASTEST","SHORTEST","REVERSE"]]),headers:{credentials:"same-origin",cookie:this.Cookies}});return await o.json()}catch(e){console.warn("Something went wrong when creating clash Error:",e)}else console.warn("You must be logged in to create clashes")}async GetClash(n){try{const o=await e("https://www.codingame.com/services/ClashOfCode/findClashByHandle",{method:"POST",body:JSON.stringify([n])});return await o.json()}catch(e){console.warn("Something went wrong when getting info on clash",n,"Error:",e)}}async GetNotifications(){if(this.UserId)try{const n=await e("https://www.codingame.com/services/Notification/findUnreadNotifications",{method:"POST",body:[this.UserId]});return await n.json()}catch(e){console.warn("Something went wrong when retrieving client notifications Error:",e)}else console.log("You must be logged in to check notifications")}async Search(n){try{const o=await e("https://www.codingame.com/services/search/search",{method:"POST",body:JSON.stringify([n,"en",null])});return await o.json()}catch(e){console.warn("Something went wrong when trying to search Error:",e)}}async GetUserByHandle(n){try{return(await(await e("https://www.codingame.com/services/CodinGamer/findCodingamePointsStatsByHandle",{method:"POST",body:JSON.stringify([n])})).json()).codinGamer}catch(e){console.warn("Something went wrong when retrieving Codingamer by handle",n,"Error:",e)}}async GetUserByName(e){const n=await this.Search(e);if(null!=n)for(const o of n)return"USER"===o.type&&o.name===e?(await this.GetUserByHandle(o.id)).codinGamer:"No user found"}async GetPendingClashes(){try{const n=await e("https://www.codingame.com/services/ClashOfCode/findPendingClashes",{method:"POST",body:JSON.stringify([])});return(await n.json()).codinGamer}catch(e){console.warn("Something went wrong when getting pending clashes",e)}}constructor(e){e&&e.Email&&e.Password&&this.Login({Email:e.Email,Password:e.Password})}}
