const Tough=require("tough-cookie"),NodeFetch=require("node-fetch"),Fetch=require("fetch-cookie")(NodeFetch,new Tough.CookieJar);module.exports=class{async Login(e){let o={};try{const t=await Fetch("https://www.codingame.com/services/Codingamer/loginSiteV2",{method:"POST",body:JSON.stringify([e.Email,e.Password,!0])});o=await t.json()}catch(e){return console.warn("There was an error when logging in Error:",e),e}o.userId||console.warn("No userId was found in the login result:",o),this.User=o,this.UserId=o.userId}async FindCodinGamer(e){try{const o=await Fetch("https://www.codingame.com/services/CodinGamer/findCodingamerFollowCard",{method:"POST",body:JSON.stringify([e,this.UserId])});return await o.json()}catch(o){console.warn("Something went wrong when getting info on Codingamer",e,"Error:",o)}}async CreateClash(e){if(this.UserId)try{const o=await Fetch("https://www.codingame.com/services/ClashOfCode/createPrivateClash",{method:"POST",body:JSON.stringify([this.UserId,{SHORT:!0},[],e||["FASTEST","SHORTEST","REVERSE"]])});return await o.json()}catch(e){console.warn("Something went wrong when creating clash Error:",e)}else console.warn("You must be logged in to create clashes")}async GetClash(e){try{const o=await Fetch("https://www.codingame.com/services/ClashOfCode/findClashByHandle",{method:"POST",body:JSON.stringify([e])});return await o.json()}catch(o){console.warn("Something went wrong when getting info on clash",e,"Error:",o)}}async GetNotifications(){if(this.userId)try{const e=await Fetch("https://www.codingame.com/services/Notification/findUnreadNotifications",{method:"POST",body:[this.UserId]});return await e.json()}catch(e){console.warn("Something went wrong when retrieving client notifications Error:",e)}else console.log("You must be logged in to check notifications")}async Search(e){try{const o=await Fetch("https://www.codingame.com/services/search/search",{method:"POST",body:JSON.stringify([e,"en",null])});return await o.json()}catch(e){console.warn("Something went wrong when trying to search Error:",e)}}constructor(e){e&&e.Email&&e.Password&&this.Login({Email:e.Email,Password:e.Password})}};